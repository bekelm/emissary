pipeline {
    agent none
    parameters {
        string(defaultValue: "", description: 'String used to tag and release emissary if pipeline successfully builds.', name: 'TAG_EMISSARY')
	string(defaultValue: "", description: 'String used to tag and release burrito if pipeline successfully builds.', name: 'TAG_BURRITO')
    }
    stages {
        stage('Build Emissary') {
	    agent any
	    tools {
    	    	  maven 'Maven 3.6.1'
   	    }
            steps {
		sh 'sudo yum install -y java-1.8.0-openjdk tar expect which docker docker-compose'
		sh 'cat bashrc_addition >> ~/.bashrc'
		sh 'mkdir -p ~/.m2'
		sh 'chmod -R 777 ~/.m2'
		sh 'rm -rf ~/.m2/repository'
		sh 'mv settings.xml ~/.m2'
		sh 'mv settings-security.xml ~/.m2'
		sh 'mvn clean install'
		sh 'mvn clean compile'
		sh 'head pom.xml'
            }
        }
	stage('Build Docker Image'){
	    agent any
	    tools {
    	    	  maven 'Maven 3.6.1'
   	    }
	    steps {
	        sh 'sudo systemctl start docker'
		sh 'echo ${TAG_EMISSARY}'
		sh ('if [ "$TAG_EMISSARY" != "" ]; then mvn versions:set -DnewVersion=${TAG_EMISSARY}; fi;')
		sh ('if [ "$TAG_EMISSARY" != "" ]; then mvn versions:commit; fi;')
		sh 'head pom.xml'
		sh 'mvn clean package -Pdist'
		sh 'head pom.xml'
	   	sh ('if [ "$TAG_EMISSARY" == "" ]; then docker build -t emissary:latest --build-arg PROJ_VERS=$(./emissary version | grep Version: | awk {\'print $3 " " \'}) --build-arg IMG_NAME=latest .; else docker build -t emissary:${TAG_EMISSARY} --build-arg PROJ_VERS=${TAG_EMISSARY} --build-arg IMG_NAME=${TAG_EMISSARY} .; fi;')
	    }
	}
        stage('Test') {
	    agent any
	    tools {
    	    	  maven 'Maven 3.6.1'
   	    }
            steps {
		sh 'rm -f test_results'
		sh 'sudo ./test_script.sh'
            }
        }
	stage('Build JAR for Burrito consumption'){
	    agent any
	    tools {
  	        maven 'Maven 3.6.1'
	    }
	    steps {
	    	sh ('if [ "$TAG_EMISSARY" != "" ]; then mvn versions:set -DnewVersion=${TAG_EMISSARY}; fi;')
		sh ('if [ "$TAG_EMISSARY" != "" ]; then mvn versions:commit; fi;')
	    	sh 'head pom.xml'
	        sh 'mvn package'
		sh 'head pom.xml'
		sh 'mv target/emissary*.jar target/emissary.jar'
		archiveArtifacts artifacts: 'target/emissary.jar', fingerprint: true
	    }
	}
	stage('Tag + Release'){
	    agent any
	    tools {
  	        maven 'Maven 3.6.1'
	    }
	    steps {
	    	sh 'head pom.xml'
		sh ('if [ "$TAG_EMISSARY" != "" ]; then mvn versions:set -DnewVersion=${TAG_EMISSARY}; fi;')
		sh ('if [ "$TAG_EMISSARY" != "" ]; then mvn versions:commit; fi;')
	        sh 'git config user.name "bekelm" && git config user.email "benjamin.e.kelm@gmail.com"'
	    	withCredentials([usernamePassword(credentialsId: 'bekelm_git', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
		    sh ('if [ "$TAG_EMISSARY" != "" ]; then git add .; fi;')
		    sh ('if [ "$TAG_EMISSARY" != "" ]; then git commit -m "Commit made from Jenkins for tag ${TAG_EMISSARY}"; fi;')
		    sh('if [ "$TAG_EMISSARY" != "" ]; then git tag -a ${TAG_EMISSARY} -m "Jenkins tag of ${TAG_EMISSARY}"; fi;')
		    sh('if [ "$TAG_EMISSARY" != "" ]; then git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/bekelm/emissary.git --tags; fi;')
		}
	    }
	}
	stage('Start Burrito Build'){
	    agent any
	    steps {
	        build(
		    job: 'burrito_pipeline',
		    parameters: [
		     	string(name: 'TAG_EMISSARY', value: String.valueOf(TAG_EMISSARY)), 
		        string(name: 'TAG_BURRITO', value: String.valueOf(TAG_BURRITO))
		    ] 
		)
	    }   
	}
    }
}